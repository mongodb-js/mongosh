class:
    <<: *__defaultClass
    __methods:
        wrappee: '_mapper'
        firstArg: 'this'
        wrappeePrefix: 'collection_'
    __constructorArgs:
        - _mapper
        - _database
        - _name
    __stringRep:
        - this._name
    __hasAsyncChild: true
    aggregate:
        <<: *__defaultMethod
        returnType: 'AggregationCursor'
    bulkWrite:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    countDocuments:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '4.0.3'
            - *ServerVersions.latest
    count:
        <<: *__defaultMethod
        returnsPromise: true
    deleteMany:
        <<: *__defaultMethod
        returnsPromise: true
    deleteOne:
        <<: *__defaultMethod
        returnsPromise: true
    distinct:
        <<: *__defaultMethod
        returnsPromise: true
    estimatedDocumentCount:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '4.0.3'
            - *ServerVersions.latest
    find:
        <<: *__defaultMethod
        returnType: 'Cursor'
    findAndModify:
        <<: *__defaultMethod
        returnsPromise: true
    findOne:
        <<: *__defaultMethod
        returnsPromise: true
    findOneAndDelete:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    findOneAndReplace:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    findOneAndUpdate:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    insert:
        <<: *__defaultMethod
        returnsPromise: true
    insertMany:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    insertOne:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    isCapped:
        <<: *__defaultMethod
        returnsPromise: true
    remove:
        <<: *__defaultMethod
        returnsPromise: true
    save:
        <<: *__defaultMethod
        returnsPromise: true
    replaceOne:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    update:
        <<: *__defaultMethod
        returnsPromise: true
    updateMany:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    updateOne:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    convertToCapped:
        <<: *__defaultMethod
        returnsPromise: true

    createIndexes:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    createIndex:
        <<: *__defaultMethod
        returnsPromise: true

    ensureIndex:
        <<: *__defaultMethod
        returnsPromise: true
    getIndexes:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    getIndexSpecs:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    getIndexKeys:
        <<: *__defaultMethod
        returnsPromise: true
        serverVersions:
            - '3.2.0'
            - *ServerVersions.latest
    getIndices:
        <<: *__defaultMethod
        returnsPromise: true
    dropIndexes:
        <<: *__defaultMethod
        returnsPromise: true
    dropIndex:
        <<: *__defaultMethod
        returnsPromise: true
    reIndex:
        <<: *__defaultMethod
        returnsPromise: true
    totalIndexSize:
        <<: *__defaultMethod
        returnsPromise: true
    getDB:
        <<: *__defaultMethod
        returnsPromise: false
        returnType: 'Database'
    stats:
        <<: *__defaultMethod
        returnsPromise: true
    dataSize:
        <<: *__defaultMethod
        returnsPromise: true
    storageSize:
        <<: *__defaultMethod
        returnsPromise: true
    totalSize:
        <<: *__defaultMethod
        returnsPromise: true
    drop:
        <<: *__defaultMethod
        returnsPromise: true
    getFullName:
        <<: *__defaultMethod
    getName:
        <<: *__defaultMethod
    exists:
        <<: *__defaultMethod
        returnsPromise: true
    renameCollection:
        <<: *__defaultMethod
        returnsPromise: true
    runCommand:
        <<: *__defaultMethod
        returnsPromise: true
    explain:
        <<: *__defaultMethod
        returnType: 'Explainable'
