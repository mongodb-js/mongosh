# Regenerate using `npm run update-evergreen-config`
exec_timeout_secs: 3600

post_error_fails_task: true
post:
  - command: shell.exec
    params:
      shell: bash
      script: |
        mkdir -p npm-logs
        tar cvzf npm-logs.tgz npm-logs
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: npm-logs.tgz
      remote_file: mongosh/binaries/${revision}/${revision_order_id}/npm-logs-${build_variant}-${task_name}-${task_id}.tgz
      bucket: mciuploads
      permissions: public-read
      content_type: application/x-gzip

# Functions are any command that can be run.
#
# Current functions:
#   checkout - Checks out the project from git.
#   compile_ts - Installs Node and all dependencies, and run all prepublish scripts.
#   install - Installs Node and all dependencies, and download the result of running all prepublish scripts.
#   check - Performs linter and dependency checks.
#   test - Runs all tests for a specific package.
#   test_vscode - Clones the vscode extension repository and runs its tests.
#   test_connectivity - Runs extra connectivity tests.
#   test_apistrict - Runs shell API and CLI tests with --apiStrict --apiDeprecationErrors.
#   compile_artifact - Compile the release binary.
#   package_and_upload_artifact - Upload the release binary to S3.
#   test_linux_artifact - Test that the built artifact works where we expect it to.
#                         We use this to verify that e.g. the Ubuntu-built release
#                         binary also works on RHEL and Debian.
#   release_publish - Publishes the npm packages and uploads the tarballs.
functions:
  checkout:
    - command: git.get_project
      params:
        directory: src
  compile_ts:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          export NODE_JS_VERSION=${node_js_version}
          export NPM_DEPS_MODE=cli_build
          source .evergreen/install-node.sh
          source .evergreen/install-npm-deps.sh
          npm run bootstrap-ci
          tar cvzf compiled-ts.tgz packages/*/{lib,dist}
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/compiled-ts.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/compiled-ts.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip
  install:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          export NODE_JS_VERSION=${node_js_version}
          export NPM_DEPS_MODE=${npm_deps_mode}
          source .evergreen/install-node.sh
          source .evergreen/install-npm-deps.sh
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/compiled-ts.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/compiled-ts.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          tar xvzf compiled-ts.tgz
  check:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          source .evergreen/setup-env.sh
          npm run check-ci
          }
  test:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          export MONGOSH_RUN_ONLY_IN_PACKAGE=${mongosh_run_only_in_package}
          source .evergreen/setup-env.sh
          npm run test-ci
          echo "Archiving current coverage result..."
          tar cvzf nyc-output.tgz .nyc_output
          }
        env:
          AWS_AUTH_IAM_ACCESS_KEY_ID: ${devtools_ci_aws_key}
          AWS_AUTH_IAM_SECRET_ACCESS_KEY: ${devtools_ci_aws_secret}
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-${build_variant}-${mongosh_test_id}.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip

  check_coverage:
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_arg_parser.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_arg_parser.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_arg_parser.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_arg_parser.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_arg_parser.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_arg_parser.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_async_rewriter2.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_async_rewriter2.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_async_rewriter2.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_async_rewriter2.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_async_rewriter2.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_async_rewriter2.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_autocomplete.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_autocomplete.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_autocomplete.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_autocomplete.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_autocomplete.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_autocomplete.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_browser_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_browser_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_browser_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_browser_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_browser_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_browser_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_browser_runtime_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_browser_runtime_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_browser_runtime_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_browser_runtime_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_browser_runtime_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_browser_runtime_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_browser_runtime_electron.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_browser_runtime_electron.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_browser_runtime_electron.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_browser_runtime_electron.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_browser_runtime_electron.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_browser_runtime_electron.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_build.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_build.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_build.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_build.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_build.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_build.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_editor.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_editor.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_editor.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_editor.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_editor.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_editor.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_errors.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_errors.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_errors.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_errors.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_errors.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_errors.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_history.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_history.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_history.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_history.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_history.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_history.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_i18n.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_i18n.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_i18n.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_i18n.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_i18n.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_i18n.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_js_multiline_to_singleline.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_js_multiline_to_singleline.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_js_multiline_to_singleline.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_js_multiline_to_singleline.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_js_multiline_to_singleline.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_js_multiline_to_singleline.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_logging.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_logging.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_logging.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_logging.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_logging.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_logging.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_service_provider_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_service_provider_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_service_provider_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_service_provider_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_service_provider_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_service_provider_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m40xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m40xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m40xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m42xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m42xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m42xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m44xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m44xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m44xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-m50xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-m50xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-m50xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-mlatest_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-mlatest_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-mlatest_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_shell_evaluator.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_shell_evaluator.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_shell_evaluator.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_shell_evaluator.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_shell_evaluator.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_shell_evaluator.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_snippet_manager.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_snippet_manager.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_snippet_manager.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_snippet_manager.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_snippet_manager.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_snippet_manager.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n16_types.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n16_types.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n16_types.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-darwin_unit-n14_types.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-darwin_unit-n14_types.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-darwin_unit-n14_types.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_arg_parser.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_arg_parser.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_arg_parser.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_arg_parser.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_arg_parser.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_arg_parser.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_async_rewriter2.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_async_rewriter2.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_async_rewriter2.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_async_rewriter2.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_async_rewriter2.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_async_rewriter2.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_autocomplete.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_autocomplete.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_autocomplete.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_autocomplete.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_autocomplete.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_autocomplete.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_browser_runtime_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_browser_runtime_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_browser_runtime_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_browser_runtime_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_browser_runtime_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_browser_runtime_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_browser_runtime_electron.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_browser_runtime_electron.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_browser_runtime_electron.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_browser_runtime_electron.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_browser_runtime_electron.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_browser_runtime_electron.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_build.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_build.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_build.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_build.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_build.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_build.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_editor.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_editor.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_editor.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_editor.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_editor.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_editor.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_errors.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_errors.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_errors.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_errors.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_errors.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_errors.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_history.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_history.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_history.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_history.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_history.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_history.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_i18n.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_i18n.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_i18n.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_i18n.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_i18n.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_i18n.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n16_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n16_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n16_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n14_java_shell.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n14_java_shell.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n14_java_shell.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_js_multiline_to_singleline.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_js_multiline_to_singleline.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_js_multiline_to_singleline.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_js_multiline_to_singleline.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_js_multiline_to_singleline.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_js_multiline_to_singleline.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_logging.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_logging.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_logging.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_logging.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_logging.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_logging.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_service_provider_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_service_provider_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_service_provider_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_service_provider_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_service_provider_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_service_provider_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m40xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m40xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m40xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m42xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m42xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m42xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m44xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m44xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m44xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-m50xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-m50xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-m50xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-mlatest_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-mlatest_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-mlatest_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_shell_evaluator.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_shell_evaluator.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_shell_evaluator.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_shell_evaluator.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_shell_evaluator.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_shell_evaluator.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_snippet_manager.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_snippet_manager.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_snippet_manager.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_snippet_manager.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_snippet_manager.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_snippet_manager.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n16_types.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n16_types.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n16_types.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-linux_unit-n14_types.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-linux_unit-n14_types.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-linux_unit-n14_types.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_arg_parser.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_arg_parser.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_arg_parser.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_arg_parser.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_arg_parser.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_arg_parser.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_async_rewriter2.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_async_rewriter2.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_async_rewriter2.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_async_rewriter2.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_async_rewriter2.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_async_rewriter2.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_autocomplete.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_autocomplete.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_autocomplete.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_autocomplete.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_autocomplete.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_autocomplete.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_browser_runtime_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_browser_runtime_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_browser_runtime_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_browser_runtime_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_browser_runtime_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_browser_runtime_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_browser_runtime_electron.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_browser_runtime_electron.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_browser_runtime_electron.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_browser_runtime_electron.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_browser_runtime_electron.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_browser_runtime_electron.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_build.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_build.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_build.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_build.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_build.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_build.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n16_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n16_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n16_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n14_cli_repl.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n14_cli_repl.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n14_cli_repl.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_editor.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_editor.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_editor.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_editor.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_editor.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_editor.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_errors.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_errors.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_errors.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_errors.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_errors.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_errors.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_history.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_history.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_history.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_history.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_history.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_history.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_i18n.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_i18n.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_i18n.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_i18n.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_i18n.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_i18n.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_js_multiline_to_singleline.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_js_multiline_to_singleline.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_js_multiline_to_singleline.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_js_multiline_to_singleline.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_js_multiline_to_singleline.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_js_multiline_to_singleline.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_logging.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_logging.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_logging.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_logging.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_logging.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_logging.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n16_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n16_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n16_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n14_node_runtime_worker_thread.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n14_node_runtime_worker_thread.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n14_node_runtime_worker_thread.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_service_provider_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_service_provider_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_service_provider_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_service_provider_core.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_service_provider_core.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_service_provider_core.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n16_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n16_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n16_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n14_service_provider_server.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n14_service_provider_server.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n14_service_provider_server.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n16_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n16_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n16_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m40xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m40xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m40xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m42xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m42xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m42xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m44xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m44xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m44xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xc_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xc_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xc_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-m50xe_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-m50xe_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-m50xe_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-mlatest_n14_shell_api.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-mlatest_n14_shell_api.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-mlatest_n14_shell_api.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_shell_evaluator.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_shell_evaluator.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_shell_evaluator.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_shell_evaluator.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_shell_evaluator.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_shell_evaluator.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_snippet_manager.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_snippet_manager.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_snippet_manager.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_snippet_manager.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_snippet_manager.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_snippet_manager.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n16_types.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n16_types.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n16_types.tgz
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/nyc-output-win32_unit-n14_types.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/nyc-output-win32_unit-n14_types.tgz
        bucket: mciuploads
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          tar xvzf nyc-output-win32_unit-n14_types.tgz
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          source .evergreen/setup-env.sh
          npm run report-coverage-ci
          echo "Creating coverage tarball..."
          tar cvzf coverage.tgz coverage
          }
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/coverage.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/coverage.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip

  test_vscode:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          source .evergreen/setup-env.sh
          (cd scripts/docker && docker build -t ubuntu18.04-xvfb -f ubuntu18.04-xvfb.Dockerfile .)
          docker run \
            --rm -v $PWD:/tmp/build ubuntu18.04-xvfb \
            -c 'cd /tmp/build && ./testing/test-vscode.sh'
          }
  test_connectivity:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          source .evergreen/setup-env.sh
          npm run test-connectivity
          }
  test_apistrict:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          source .evergreen/setup-env.sh
          npm run test-apistrict-ci
          }

  ###
  # ARTIFACT COMPILATION
  #
  # compile_artifact generates the executable binary and uploads it as TGZ to S3 for later use.
  # Use download_compiled_artifact to download the TGZ from S3.
  #
  # Both functions expect the following arguments:
  # - executable_os_id
  ###
  compile_artifact:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash .evergreen/compile-artifact.sh
        env:
          NODE_JS_VERSION: ${node_js_version}
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/dist.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/mongosh-${executable_os_id}.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip
  download_compiled_artifact:
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/dist.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/mongosh-${executable_os_id}.tgz
        bucket: mciuploads

  ###
  # E2E TEST EXECUTION
  #
  # Runs the E2E tests against the compiled artifact, i.e. expects the compiled artifact to be already present.
  ###
  run_e2e_tests:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash .evergreen/run-e2e-tests.sh
        env:
          NODE_JS_VERSION: ${node_js_version}
          AWS_AUTH_IAM_ACCESS_KEY_ID: ${devtools_ci_aws_key}
          AWS_AUTH_IAM_SECRET_ACCESS_KEY: ${devtools_ci_aws_secret}

  ###
  # PACKAGING AND UPLOADING
  #
  # package_and_upload_artifact generates a distributable package out of the compiled artifact,
  # i.e. it expects it to have been downloaded already. The distributable package will be uploaded
  # to a specifc Evergreen S3 bucket for later use.
  #
  # The URL to download the distributable package can be retrieved by get_artifact_url.
  #
  # package_and_upload_artifact expects the following arguments:
  # - distro_id
  # - distribution_build_variant
  # - executable_os_id
  #
  # get_artifact_url expects the following arguments:
  # - distribution_build_variant
  ###
  package_and_upload_artifact:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
        # TODO: REPLACE WITH CALLING download_compiled_artifact BEFORE
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/dist.tgz
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/mongosh-${executable_os_id}.tgz
        bucket: mciuploads
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash .evergreen/package-and-upload-artifact.sh
        env:
          NODE_JS_VERSION: ${node_js_version}
          DISTRO_ID_OVERRIDE: ${distro_id}
          DISTRIBUTION_BUILD_VARIANT: ${distribution_build_variant}
          MACOS_NOTARY_KEY: ${macos_notary_key}
          MACOS_NOTARY_SECRET: ${macos_notary_secret}
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/artifact-url.txt
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/artifact-url-${distribution_build_variant}.txt
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip
  get_artifact_url:
    - command: s3.get
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: artifact-url.txt
        remote_file: mongosh/binaries/${revision}/${revision_order_id}/artifact-url-${source_distribution_build_variant}.txt
        bucket: mciuploads

  write_preload_script:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          set +x
          cat <<PRELOAD_SCRIPT > preload.sh
          echo "Preload script starting"
          set -e
          set -x
          export ARTIFACT_URL=$(cat ../artifact-url.txt)
          export IS_CI=1
          set +x
          export MONGOSH_SMOKE_TEST_SERVER="mongodb+srv://${connectivity_test_atlas_username}:${connectivity_test_atlas_password}@${connectivity_test_atlas_hostname}/"
          echo "Preload script done"
          set -x
          PRELOAD_SCRIPT
  spawn_host:
    - command: host.create
      params:
        provider: ec2
        distro: ${distro}
        security_group_ids:
          - sg-097bff6dd0d1d31d0 # Magic string that's needed for SSH'ing.
    - command: host.list
      params:
        num_hosts: 1
        path: buildhosts.yml # Write the host information to disk.
        timeout_seconds: 1200
        wait: true
  run_pkg_tests_through_ssh:
    - command: shell.exec
      params:
        shell: bash
        script: |
          set -e
          {
          set +x
          echo '${__project_aws_ssh_key_value}' > ~/.ssh/mcipacker.pem
          chmod 0600 ~/.ssh/mcipacker.pem
          set -x
          }
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash .evergreen/run-on-ssh-host.sh
        env:
          ADMIN_USER_NAME: ${admin_user_name}
          ONHOST_SCRIPT_PATH: ${onhost_script_path}
          PRELOAD_SCRIPT_PATH: ${preload_script_path}
  test_artifact_docker:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          set -x
          {
          export NODE_JS_VERSION=${node_js_version}
          . .evergreen/setup-env.sh
          . preload.sh
          ./scripts/docker/build.sh ${dockerfile}
          ./scripts/docker/run.sh ${dockerfile} --smokeTests
          }
  test_artifact_macos:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          set -x
          {
          system_profiler SPSoftwareDataType # for debugging
          . preload.sh
          curl -sSfL "$ARTIFACT_URL" > mongosh.zip
          unzip mongosh.zip
          ./mongosh-*/bin/mongosh --smokeTests
          }
  test_artifact_rpmextract:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          set -x
          {
          . preload.sh
          curl -sSfL "$ARTIFACT_URL" > mongosh.rpm
          rpm2cpio mongosh.rpm | cpio -idmv
          ./usr/bin/mongosh --smokeTests
          }
  test_artifact_debextract:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          set -x
          {
          . preload.sh
          curl -sSfL "$ARTIFACT_URL" > mongosh.deb
          dpkg -x mongosh.deb .
          ./usr/bin/mongosh --smokeTests
          }

  release_draft:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          source .evergreen/setup-env.sh
          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD="true"
          npm run evergreen-release draft
          }

  release_publish:
    - command: expansions.write
      params:
        file: tmp/expansions.yaml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          set -e
          {
          export NODE_JS_VERSION=${node_js_version}
          source .evergreen/setup-env.sh
          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD="true"
          echo "//registry.npmjs.org/:_authToken=${devtoolsbot_npm_token}" > .npmrc
          npm run evergreen-release publish
          }

# Tasks will show up as the individual blocks in the Evergreen UI that can
# pass or fail.
#
# Current tasks:
#   compile_ts - Do the initial compilation of TS sources.
#   check - Performs linter and dependency checks.
#   check_coverage - Performs coverage check by merging all NYC outputs first
#   test_{version} - Runs all tests, against a specified mongod version.
#   test_vscode - Run the vscode extension integration tests.
#   test_connectivity - Runs extra connectivity tests.
#   test_apistrict - Runs shell API and CLI tests with --apiStrict --apiDeprecationErrors.
#   compile_artifact - Compile the release binary.
#   package_and_upload_artifact - Upload the release binary to S3.
#   test_linux_artifact - Test that the built artifact works where we expect it to.
#   release_publish - Publishes the npm packages and uploads the tarballs.
#   pkg_test_* - Run tests on the release packages
tasks:
  - name: compile_ts
    commands:
      - func: checkout
      - func: compile_ts
        vars:
          node_js_version: "16.15.0"

  - name: check
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: check
        vars:
          node_js_version: "16.15.0"

  - name: check_coverage
    depends_on:
      - name: ".unit-test"
        variant: "*"
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: check_coverage
        vars:
          node_js_version: "16.15.0"

  ###
  # UNIT TESTS
  # E.g. test_m40xc_n12 stands for mongod 4.0.x, community edition, Node.js 12
  ###
  - name: test_n16_arg_parser
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_arg_parser"
          mongosh_run_only_in_package: "arg-parser"
  - name: test_n14_arg_parser
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_arg_parser"
          mongosh_run_only_in_package: "arg-parser"
  - name: test_n16_async_rewriter2
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_async_rewriter2"
          mongosh_run_only_in_package: "async-rewriter2"
  - name: test_n14_async_rewriter2
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_async_rewriter2"
          mongosh_run_only_in_package: "async-rewriter2"
  - name: test_n16_autocomplete
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_autocomplete"
          mongosh_run_only_in_package: "autocomplete"
  - name: test_n14_autocomplete
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_autocomplete"
          mongosh_run_only_in_package: "autocomplete"
  - name: test_n16_browser_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_browser_repl"
          mongosh_run_only_in_package: "browser-repl"
  - name: test_n14_browser_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_browser_repl"
          mongosh_run_only_in_package: "browser-repl"
  - name: test_n16_browser_runtime_core
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_browser_runtime_core"
          mongosh_run_only_in_package: "browser-runtime-core"
  - name: test_n14_browser_runtime_core
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_browser_runtime_core"
          mongosh_run_only_in_package: "browser-runtime-core"
  - name: test_n16_browser_runtime_electron
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_browser_runtime_electron"
          mongosh_run_only_in_package: "browser-runtime-electron"
  - name: test_n14_browser_runtime_electron
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_browser_runtime_electron"
          mongosh_run_only_in_package: "browser-runtime-electron"
  - name: test_n16_build
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_build"
          mongosh_run_only_in_package: "build"
  - name: test_n14_build
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_build"
          mongosh_run_only_in_package: "build"
  - name: test_m40xc_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xc_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m40xe_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xe_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m42xc_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xc_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m42xe_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xe_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m44xc_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xc_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m44xe_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xe_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m50xc_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xc_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m50xe_n16_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xe_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_mlatest_n16_cli_repl
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "mlatest_n16_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m40xc_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xc_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m40xe_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xe_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m42xc_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xc_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m42xe_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xe_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m44xc_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xc_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m44xe_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xe_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m50xc_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xc_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_m50xe_n14_cli_repl
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xe_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_mlatest_n14_cli_repl
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "mlatest_n14_cli_repl"
          mongosh_run_only_in_package: "cli-repl"
  - name: test_n16_connectivity_tests
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_connectivity_tests"
          mongosh_run_only_in_package: "connectivity-tests"
  - name: test_n14_connectivity_tests
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_connectivity_tests"
          mongosh_run_only_in_package: "connectivity-tests"
  - name: test_n16_editor
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_editor"
          mongosh_run_only_in_package: "editor"
  - name: test_n14_editor
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_editor"
          mongosh_run_only_in_package: "editor"
  - name: test_n16_errors
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_errors"
          mongosh_run_only_in_package: "errors"
  - name: test_n14_errors
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_errors"
          mongosh_run_only_in_package: "errors"
  - name: test_n16_history
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_history"
          mongosh_run_only_in_package: "history"
  - name: test_n14_history
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_history"
          mongosh_run_only_in_package: "history"
  - name: test_n16_i18n
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_i18n"
          mongosh_run_only_in_package: "i18n"
  - name: test_n14_i18n
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_i18n"
          mongosh_run_only_in_package: "i18n"
  - name: test_m40xc_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xc_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m40xe_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xe_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m42xc_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xc_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m42xe_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xe_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m44xc_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xc_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m44xe_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xe_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m50xc_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xc_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m50xe_n16_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xe_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_mlatest_n16_java_shell
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "mlatest_n16_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m40xc_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xc_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m40xe_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xe_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m42xc_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xc_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m42xe_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xe_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m44xc_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xc_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m44xe_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xe_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m50xc_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xc_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_m50xe_n14_java_shell
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xe_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_mlatest_n14_java_shell
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "mlatest_n14_java_shell"
          mongosh_run_only_in_package: "java-shell"
  - name: test_n16_js_multiline_to_singleline
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_js_multiline_to_singleline"
          mongosh_run_only_in_package: "js-multiline-to-singleline"
  - name: test_n14_js_multiline_to_singleline
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_js_multiline_to_singleline"
          mongosh_run_only_in_package: "js-multiline-to-singleline"
  - name: test_n16_logging
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_logging"
          mongosh_run_only_in_package: "logging"
  - name: test_n14_logging
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_logging"
          mongosh_run_only_in_package: "logging"
  - name: test_m40xc_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xc_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m40xe_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xe_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m42xc_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xc_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m42xe_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xe_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m44xc_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xc_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m44xe_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xe_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m50xc_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xc_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m50xe_n16_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xe_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_mlatest_n16_mongosh
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "mlatest_n16_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m40xc_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xc_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m40xe_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xe_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m42xc_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xc_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m42xe_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xe_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m44xc_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xc_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m44xe_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xe_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m50xc_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xc_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m50xe_n14_mongosh
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xe_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_mlatest_n14_mongosh
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "mlatest_n14_mongosh"
          mongosh_run_only_in_package: "mongosh"
  - name: test_m40xc_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xc_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m40xe_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xe_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m42xc_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xc_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m42xe_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xe_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m44xc_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xc_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m44xe_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xe_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m50xc_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xc_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m50xe_n16_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xe_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_mlatest_n16_node_runtime_worker_thread
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "mlatest_n16_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m40xc_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xc_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m40xe_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xe_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m42xc_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xc_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m42xe_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xe_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m44xc_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xc_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m44xe_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xe_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m50xc_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xc_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_m50xe_n14_node_runtime_worker_thread
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xe_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_mlatest_n14_node_runtime_worker_thread
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "mlatest_n14_node_runtime_worker_thread"
          mongosh_run_only_in_package: "node-runtime-worker-thread"
  - name: test_n16_service_provider_core
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_service_provider_core"
          mongosh_run_only_in_package: "service-provider-core"
  - name: test_n14_service_provider_core
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_service_provider_core"
          mongosh_run_only_in_package: "service-provider-core"
  - name: test_m40xc_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xc_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m40xe_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xe_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m42xc_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xc_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m42xe_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xe_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m44xc_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xc_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m44xe_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xe_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m50xc_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xc_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m50xe_n16_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xe_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_mlatest_n16_service_provider_server
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "mlatest_n16_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m40xc_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xc_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m40xe_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xe_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m42xc_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xc_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m42xe_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xe_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m44xc_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xc_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m44xe_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xe_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m50xc_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xc_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m50xe_n14_service_provider_server
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xe_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_mlatest_n14_service_provider_server
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "mlatest_n14_service_provider_server"
          mongosh_run_only_in_package: "service-provider-server"
  - name: test_m40xc_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xc_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m40xe_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m40xe_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m42xc_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xc_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m42xe_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m42xe_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m44xc_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xc_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m44xe_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m44xe_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m50xc_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xc_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m50xe_n16_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "m50xe_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_mlatest_n16_shell_api
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "mlatest_n16_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m40xc_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xc_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m40xe_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m40xe_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m42xc_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xc_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m42xe_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.2.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m42xe_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m44xc_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xc_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m44xe_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "4.4.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m44xe_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m50xc_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x-community"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xc_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_m50xe_n14_shell_api
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "5.0.x"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "m50xe_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_mlatest_n14_shell_api
    tags: ["unit-test","mlatest"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: "latest-alpha"
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "mlatest_n14_shell_api"
          mongosh_run_only_in_package: "shell-api"
  - name: test_n16_shell_evaluator
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_shell_evaluator"
          mongosh_run_only_in_package: "shell-evaluator"
  - name: test_n14_shell_evaluator
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_shell_evaluator"
          mongosh_run_only_in_package: "shell-evaluator"
  - name: test_n16_snippet_manager
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_snippet_manager"
          mongosh_run_only_in_package: "snippet-manager"
  - name: test_n14_snippet_manager
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_snippet_manager"
          mongosh_run_only_in_package: "snippet-manager"
  - name: test_n16_types
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "16.15.0"
          mongosh_skip_node_version_check: ""
          mongosh_test_id: "n16_types"
          mongosh_run_only_in_package: "types"
  - name: test_n14_types
    tags: ["unit-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test
        vars:
          mongosh_server_test_version: ""
          node_js_version: "14.19.2"
          mongosh_skip_node_version_check: "1"
          mongosh_test_id: "n14_types"
          mongosh_run_only_in_package: "types"

  ###
  # INTEGRATION TESTS
  ###
  - name: test_vscode
    tags: ["extra-integration-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "14.19.2"
          npm_deps_mode: all
      - func: test_vscode
        vars:
          node_js_version: "14.19.2"
  - name: test_connectivity
    tags: ["extra-integration-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: test_connectivity
  - name: test_apistrict
    tags: ["extra-integration-test"]
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_apistrict
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "latest-alpha"
          mongosh_test_force_api_strict: "1"
  - name: compile_artifact
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: compile_artifact
        vars:
          node_js_version: "16.15.0"

  ###
  # E2E TESTS
  ###
  - name: e2e_tests_darwin_x64
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: darwin
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: darwin-x64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "stable"
  - name: e2e_tests_darwin_x64_unstable
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: darwin
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: darwin-x64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "unstable"
  - name: e2e_tests_darwin_arm64
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: darwin_arm64
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: darwin-arm64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "stable"
  - name: e2e_tests_darwin_arm64_unstable
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: darwin_arm64
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: darwin-arm64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "unstable"
  - name: e2e_tests_linux_x64
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-x64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "stable"
  - name: e2e_tests_linux_x64_unstable
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-x64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "unstable"
  - name: e2e_tests_linux_arm64
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_arm64_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-arm64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "stable"
  - name: e2e_tests_linux_arm64_unstable
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_arm64_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-arm64
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "unstable"
  - name: e2e_tests_linux_ppc64le
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_ppc64le_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-ppc64le
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "stable"
  - name: e2e_tests_linux_ppc64le_unstable
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_ppc64le_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-ppc64le
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "unstable"
  - name: e2e_tests_linux_s390x
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_s390x_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-s390x
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "stable"
  - name: e2e_tests_linux_s390x_unstable
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: linux_s390x_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: linux-s390x
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "unstable"
  - name: e2e_tests_win32
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: win32_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: win32
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "stable"
  - name: e2e_tests_win32_unstable
    tags: ["e2e-test"]
    depends_on:
      - name: compile_artifact
        variant: win32_build
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: download_compiled_artifact
        vars:
          executable_os_id: win32
      - func: run_e2e_tests
        vars:
          node_js_version: "16.15.0"
          mongosh_server_test_version: "unstable"

  ###
  # PACKAGING
  ###
  - name: package_and_upload_artifact_darwin_x64
    depends_on:
      - name: compile_artifact
        variant: darwin
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: darwin-x64
          executable_os_id: darwin-x64
  - name: package_and_upload_artifact_darwin_arm64
    depends_on:
      - name: compile_artifact
        variant: darwin_arm64
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: darwin-arm64
          executable_os_id: darwin-arm64
  - name: package_and_upload_artifact_linux_x64
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: linux-x64
          executable_os_id: linux-x64
  - name: package_and_upload_artifact_debian_x64
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: debian-x64
          executable_os_id: linux-x64
  - name: package_and_upload_artifact_rhel7_x64
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: rhel7-x64
          executable_os_id: linux-x64
  - name: package_and_upload_artifact_rhel8_x64
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: rhel8-x64
          executable_os_id: linux-x64
  - name: package_and_upload_artifact_suse_x64
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: suse-x64
          executable_os_id: linux-x64
  - name: package_and_upload_artifact_amzn1_x64
    depends_on:
      - name: compile_artifact
        variant: linux_x64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: amzn1-x64
          executable_os_id: linux-x64
  - name: package_and_upload_artifact_linux_arm64
    depends_on:
      - name: compile_artifact
        variant: linux_arm64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: linux-arm64
          executable_os_id: linux-arm64
  - name: package_and_upload_artifact_debian_arm64
    depends_on:
      - name: compile_artifact
        variant: linux_arm64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: debian-arm64
          executable_os_id: linux-arm64
  - name: package_and_upload_artifact_rhel8_arm64
    depends_on:
      - name: compile_artifact
        variant: linux_arm64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: rhel8-arm64
          executable_os_id: linux-arm64
  - name: package_and_upload_artifact_amzn2_arm64
    depends_on:
      - name: compile_artifact
        variant: linux_arm64_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: amzn2-arm64
          executable_os_id: linux-arm64
  - name: package_and_upload_artifact_linux_ppc64le
    depends_on:
      - name: compile_artifact
        variant: linux_ppc64le_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: linux-ppc64le
          executable_os_id: linux-ppc64le
  - name: package_and_upload_artifact_rhel8_ppc64le
    depends_on:
      - name: compile_artifact
        variant: linux_ppc64le_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: rhel8-ppc64le
          executable_os_id: linux-ppc64le
  - name: package_and_upload_artifact_linux_s390x
    depends_on:
      - name: compile_artifact
        variant: linux_s390x_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: linux-s390x
          executable_os_id: linux-s390x
  - name: package_and_upload_artifact_rhel7_s390x
    depends_on:
      - name: compile_artifact
        variant: linux_s390x_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: rhel7-s390x
          executable_os_id: linux-s390x
  - name: package_and_upload_artifact_win32_x64
    depends_on:
      - name: compile_artifact
        variant: win32_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: win32-x64
          executable_os_id: win32
  - name: package_and_upload_artifact_win32msi_x64
    depends_on:
      - name: compile_artifact
        variant: win32_build
    commands:
      - func: checkout
      - func: install
        vars:
          npm_deps_mode: cli_build
          node_js_version: "16.15.0"
      - func: package_and_upload_artifact
        vars:
          node_js_version: "16.15.0"
          distribution_build_variant: win32msi-x64
          executable_os_id: win32

  ###
  # SMOKE TESTS
  ###
  - name: pkg_test_macos_darwin_x64
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_darwin_x64
        variant: darwin
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: darwin-x64
      - func: write_preload_script
      - func: test_artifact_macos
  - name: pkg_test_macos_darwin_arm64
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_darwin_arm64
        variant: darwin
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: darwin-arm64
      - func: write_preload_script
      - func: test_artifact_macos
  - name: pkg_test_docker_ubuntu18_04_deb
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_debian_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: debian-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: ubuntu18.04-deb
  - name: pkg_test_docker_ubuntu20_04_deb
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_debian_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: debian-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: ubuntu20.04-deb
  - name: pkg_test_docker_debian9_deb
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_debian_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: debian-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: debian9-deb
  - name: pkg_test_docker_debian10_deb
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_debian_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: debian-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: debian10-deb
  - name: pkg_test_docker_debian11_deb
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_debian_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: debian-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: debian11-deb
  - name: pkg_test_docker_centos7_rpm
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_rhel7_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: rhel7-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: centos7-rpm
  - name: pkg_test_docker_amazonlinux2_rpm
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_rhel7_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: rhel7-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: amazonlinux2-rpm
  - name: pkg_test_docker_rocky8_rpm
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_rhel8_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: rhel8-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: rocky8-rpm
  - name: pkg_test_docker_fedora34_rpm
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_rhel8_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: rhel8-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: fedora34-rpm
  - name: pkg_test_docker_suse12_rpm
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_suse_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: suse-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: suse12-rpm
  - name: pkg_test_docker_suse15_rpm
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_suse_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: suse-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: suse15-rpm
  - name: pkg_test_docker_amazonlinux1_rpm
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_amzn1_x64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: amzn1-x64
      - func: write_preload_script
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: cli_build
      - func: test_artifact_docker
        vars:
          node_js_version: "16.15.0"
          dockerfile: amazonlinux1-rpm
  - name: pkg_test_debextract_debian_arm64
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_debian_arm64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: debian-arm64
      - func: write_preload_script
      - func: test_artifact_debextract
  - name: pkg_test_rpmextract_rhel8_arm64
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_rhel8_arm64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: rhel8-arm64
      - func: write_preload_script
      - func: test_artifact_rpmextract
  - name: pkg_test_rpmextract_amzn2_arm64
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_amzn2_arm64
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: amzn2-arm64
      - func: write_preload_script
      - func: test_artifact_rpmextract
  - name: pkg_test_rpmextract_rhel8_ppc64le
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_rhel8_ppc64le
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: rhel8-ppc64le
      - func: write_preload_script
      - func: test_artifact_rpmextract
  - name: pkg_test_rpmextract_rhel7_s390x
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_rhel7_s390x
        variant: linux_package
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: rhel7-s390x
      - func: write_preload_script
      - func: test_artifact_rpmextract
  - name: pkg_test_ssh_win32_x64
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_win32_x64
        variant: win32
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: win32-x64
      - func: write_preload_script
      - func: spawn_host
        vars:
          distro: windows-64-vs2019-small
      - func: run_pkg_tests_through_ssh
        vars:
          admin_user_name: Administrator
          onhost_script_path: .evergreen/test-package-win32.sh
          preload_script_path: preload.sh
  - name: pkg_test_ssh_win32msi_x64
    tags: ["smoke-test"]
    depends_on:
      - name: package_and_upload_artifact_win32msi_x64
        variant: win32
    commands:
      - func: checkout
      - func: get_artifact_url
        vars:
          source_distribution_build_variant: win32msi-x64
      - func: write_preload_script
      - func: spawn_host
        vars:
          distro: windows-64-vs2019-small
      - func: run_pkg_tests_through_ssh
        vars:
          admin_user_name: Administrator
          onhost_script_path: .evergreen/test-package-win32.sh
          preload_script_path: preload.sh

  ###
  # RELEASE TASKS
  ###
  - name: release_draft
    git_tag_only: true
    depends_on:
      - name: ".smoke-test"
        variant: "*"
      - name: ".extra-integration-test"
        variant: "*"
      - name: ".e2e-test"
        variant: "*"
      - name: check
        variant: "*"
      - name: ".unit-test"
        variant: "*"
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: release_draft
        vars:
          node_js_version: "16.15.0"
  - name: release_publish
    tags: ["publish"]
    git_tag_only: true
    exec_timeout_secs: 86400
    depends_on:
      - name: compile_ts
        variant: linux_unit
    commands:
      - func: checkout
      - func: install
        vars:
          node_js_version: "16.15.0"
          npm_deps_mode: all
      - func: release_publish
        vars:
          node_js_version: "16.15.0"

# Need to run builds for every possible build variant.
buildvariants:
  - name: darwin_unit
    display_name: "MacOS Mojave (Unit tests)"
    run_on: macos-1014
    expansions:
      executable_os_id: darwin-x64
    tasks:
      - name: check
      - name: test_n16_arg_parser
      - name: test_n14_arg_parser
      - name: test_n16_async_rewriter2
      - name: test_n14_async_rewriter2
      - name: test_n16_autocomplete
      - name: test_n14_autocomplete
      - name: test_n16_browser_repl
      - name: test_n14_browser_repl
      - name: test_n16_browser_runtime_core
      - name: test_n14_browser_runtime_core
      - name: test_n16_browser_runtime_electron
      - name: test_n14_browser_runtime_electron
      - name: test_n16_build
      - name: test_n14_build
      - name: test_m40xc_n16_cli_repl
      - name: test_m40xe_n16_cli_repl
      - name: test_m42xc_n16_cli_repl
      - name: test_m42xe_n16_cli_repl
      - name: test_m44xc_n16_cli_repl
      - name: test_m44xe_n16_cli_repl
      - name: test_m50xc_n16_cli_repl
      - name: test_m50xe_n16_cli_repl
      - name: test_mlatest_n16_cli_repl
      - name: test_m40xc_n14_cli_repl
      - name: test_m40xe_n14_cli_repl
      - name: test_m42xc_n14_cli_repl
      - name: test_m42xe_n14_cli_repl
      - name: test_m44xc_n14_cli_repl
      - name: test_m44xe_n14_cli_repl
      - name: test_m50xc_n14_cli_repl
      - name: test_m50xe_n14_cli_repl
      - name: test_mlatest_n14_cli_repl
      - name: test_n16_editor
      - name: test_n14_editor
      - name: test_n16_errors
      - name: test_n14_errors
      - name: test_n16_history
      - name: test_n14_history
      - name: test_n16_i18n
      - name: test_n14_i18n
      - name: test_n16_js_multiline_to_singleline
      - name: test_n14_js_multiline_to_singleline
      - name: test_n16_logging
      - name: test_n14_logging
      - name: test_m40xc_n16_node_runtime_worker_thread
      - name: test_m40xe_n16_node_runtime_worker_thread
      - name: test_m42xc_n16_node_runtime_worker_thread
      - name: test_m42xe_n16_node_runtime_worker_thread
      - name: test_m44xc_n16_node_runtime_worker_thread
      - name: test_m44xe_n16_node_runtime_worker_thread
      - name: test_m50xc_n16_node_runtime_worker_thread
      - name: test_m50xe_n16_node_runtime_worker_thread
      - name: test_mlatest_n16_node_runtime_worker_thread
      - name: test_m40xc_n14_node_runtime_worker_thread
      - name: test_m40xe_n14_node_runtime_worker_thread
      - name: test_m42xc_n14_node_runtime_worker_thread
      - name: test_m42xe_n14_node_runtime_worker_thread
      - name: test_m44xc_n14_node_runtime_worker_thread
      - name: test_m44xe_n14_node_runtime_worker_thread
      - name: test_m50xc_n14_node_runtime_worker_thread
      - name: test_m50xe_n14_node_runtime_worker_thread
      - name: test_mlatest_n14_node_runtime_worker_thread
      - name: test_n16_service_provider_core
      - name: test_n14_service_provider_core
      - name: test_m40xc_n16_service_provider_server
      - name: test_m40xe_n16_service_provider_server
      - name: test_m42xc_n16_service_provider_server
      - name: test_m42xe_n16_service_provider_server
      - name: test_m44xc_n16_service_provider_server
      - name: test_m44xe_n16_service_provider_server
      - name: test_m50xc_n16_service_provider_server
      - name: test_m50xe_n16_service_provider_server
      - name: test_mlatest_n16_service_provider_server
      - name: test_m40xc_n14_service_provider_server
      - name: test_m40xe_n14_service_provider_server
      - name: test_m42xc_n14_service_provider_server
      - name: test_m42xe_n14_service_provider_server
      - name: test_m44xc_n14_service_provider_server
      - name: test_m44xe_n14_service_provider_server
      - name: test_m50xc_n14_service_provider_server
      - name: test_m50xe_n14_service_provider_server
      - name: test_mlatest_n14_service_provider_server
      - name: test_m40xc_n16_shell_api
      - name: test_m40xe_n16_shell_api
      - name: test_m42xc_n16_shell_api
      - name: test_m42xe_n16_shell_api
      - name: test_m44xc_n16_shell_api
      - name: test_m44xe_n16_shell_api
      - name: test_m50xc_n16_shell_api
      - name: test_m50xe_n16_shell_api
      - name: test_mlatest_n16_shell_api
      - name: test_m40xc_n14_shell_api
      - name: test_m40xe_n14_shell_api
      - name: test_m42xc_n14_shell_api
      - name: test_m42xe_n14_shell_api
      - name: test_m44xc_n14_shell_api
      - name: test_m44xe_n14_shell_api
      - name: test_m50xc_n14_shell_api
      - name: test_m50xe_n14_shell_api
      - name: test_mlatest_n14_shell_api
      - name: test_n16_shell_evaluator
      - name: test_n14_shell_evaluator
      - name: test_n16_snippet_manager
      - name: test_n14_snippet_manager
      - name: test_n16_types
      - name: test_n14_types
  - name: darwin
    display_name: "MacOS Mojave"
    run_on: macos-1014
    expansions:
      executable_os_id: darwin-x64
    tasks:
      - name: compile_artifact
      - name: e2e_tests_darwin_x64
      - name: package_and_upload_artifact_darwin_x64
      - name: package_and_upload_artifact_darwin_arm64
  - name: darwin_1100
    display_name: "MacOS Big Sur"
    run_on: macos-1100
    expansions:
      executable_os_id: darwin-x64
    tasks:
      - name: e2e_tests_darwin_x64
  - name: darwin_arm64
    display_name: "MacOS Big Sur (arm64)"
    run_on: macos-1100-arm64
    expansions:
      executable_os_id: darwin-arm64
    tasks:
      - name: compile_artifact
      # - name: e2e_tests_darwin_arm64
      # No E2E test for now because there are no server releases to run them against

  - name: linux_unit
    display_name: "Ubuntu 18.04 x64 (Unit tests)"
    run_on: ubuntu1804-small
    tasks:
      - name: compile_ts
      - name: check
      - name: test_n16_arg_parser
      - name: test_n14_arg_parser
      - name: test_n16_async_rewriter2
      - name: test_n14_async_rewriter2
      - name: test_n16_autocomplete
      - name: test_n14_autocomplete
      - name: test_n16_browser_runtime_core
      - name: test_n14_browser_runtime_core
      - name: test_n16_browser_runtime_electron
      - name: test_n14_browser_runtime_electron
      - name: test_n16_build
      - name: test_n14_build
      - name: test_m40xc_n16_cli_repl
      - name: test_m40xe_n16_cli_repl
      - name: test_m42xc_n16_cli_repl
      - name: test_m42xe_n16_cli_repl
      - name: test_m44xc_n16_cli_repl
      - name: test_m44xe_n16_cli_repl
      - name: test_m50xc_n16_cli_repl
      - name: test_m50xe_n16_cli_repl
      - name: test_mlatest_n16_cli_repl
      - name: test_m40xc_n14_cli_repl
      - name: test_m40xe_n14_cli_repl
      - name: test_m42xc_n14_cli_repl
      - name: test_m42xe_n14_cli_repl
      - name: test_m44xc_n14_cli_repl
      - name: test_m44xe_n14_cli_repl
      - name: test_m50xc_n14_cli_repl
      - name: test_m50xe_n14_cli_repl
      - name: test_mlatest_n14_cli_repl
      - name: test_n16_editor
      - name: test_n14_editor
      - name: test_n16_errors
      - name: test_n14_errors
      - name: test_n16_history
      - name: test_n14_history
      - name: test_n16_i18n
      - name: test_n14_i18n
      - name: test_m40xc_n16_java_shell
      - name: test_m40xe_n16_java_shell
      - name: test_m42xc_n16_java_shell
      - name: test_m42xe_n16_java_shell
      - name: test_m44xc_n16_java_shell
      - name: test_m44xe_n16_java_shell
      - name: test_m50xc_n16_java_shell
      - name: test_m50xe_n16_java_shell
      - name: test_mlatest_n16_java_shell
      - name: test_m40xc_n14_java_shell
      - name: test_m40xe_n14_java_shell
      - name: test_m42xc_n14_java_shell
      - name: test_m42xe_n14_java_shell
      - name: test_m44xc_n14_java_shell
      - name: test_m44xe_n14_java_shell
      - name: test_m50xc_n14_java_shell
      - name: test_m50xe_n14_java_shell
      - name: test_mlatest_n14_java_shell
      - name: test_n16_js_multiline_to_singleline
      - name: test_n14_js_multiline_to_singleline
      - name: test_n16_logging
      - name: test_n14_logging
      - name: test_m40xc_n16_node_runtime_worker_thread
      - name: test_m40xe_n16_node_runtime_worker_thread
      - name: test_m42xc_n16_node_runtime_worker_thread
      - name: test_m42xe_n16_node_runtime_worker_thread
      - name: test_m44xc_n16_node_runtime_worker_thread
      - name: test_m44xe_n16_node_runtime_worker_thread
      - name: test_m50xc_n16_node_runtime_worker_thread
      - name: test_m50xe_n16_node_runtime_worker_thread
      - name: test_mlatest_n16_node_runtime_worker_thread
      - name: test_m40xc_n14_node_runtime_worker_thread
      - name: test_m40xe_n14_node_runtime_worker_thread
      - name: test_m42xc_n14_node_runtime_worker_thread
      - name: test_m42xe_n14_node_runtime_worker_thread
      - name: test_m44xc_n14_node_runtime_worker_thread
      - name: test_m44xe_n14_node_runtime_worker_thread
      - name: test_m50xc_n14_node_runtime_worker_thread
      - name: test_m50xe_n14_node_runtime_worker_thread
      - name: test_mlatest_n14_node_runtime_worker_thread
      - name: test_n16_service_provider_core
      - name: test_n14_service_provider_core
      - name: test_m40xc_n16_service_provider_server
      - name: test_m40xe_n16_service_provider_server
      - name: test_m42xc_n16_service_provider_server
      - name: test_m42xe_n16_service_provider_server
      - name: test_m44xc_n16_service_provider_server
      - name: test_m44xe_n16_service_provider_server
      - name: test_m50xc_n16_service_provider_server
      - name: test_m50xe_n16_service_provider_server
      - name: test_mlatest_n16_service_provider_server
      - name: test_m40xc_n14_service_provider_server
      - name: test_m40xe_n14_service_provider_server
      - name: test_m42xc_n14_service_provider_server
      - name: test_m42xe_n14_service_provider_server
      - name: test_m44xc_n14_service_provider_server
      - name: test_m44xe_n14_service_provider_server
      - name: test_m50xc_n14_service_provider_server
      - name: test_m50xe_n14_service_provider_server
      - name: test_mlatest_n14_service_provider_server
      - name: test_m40xc_n16_shell_api
      - name: test_m40xe_n16_shell_api
      - name: test_m42xc_n16_shell_api
      - name: test_m42xe_n16_shell_api
      - name: test_m44xc_n16_shell_api
      - name: test_m44xe_n16_shell_api
      - name: test_m50xc_n16_shell_api
      - name: test_m50xe_n16_shell_api
      - name: test_mlatest_n16_shell_api
      - name: test_m40xc_n14_shell_api
      - name: test_m40xe_n14_shell_api
      - name: test_m42xc_n14_shell_api
      - name: test_m42xe_n14_shell_api
      - name: test_m44xc_n14_shell_api
      - name: test_m44xe_n14_shell_api
      - name: test_m50xc_n14_shell_api
      - name: test_m50xe_n14_shell_api
      - name: test_mlatest_n14_shell_api
      - name: test_n16_shell_evaluator
      - name: test_n14_shell_evaluator
      - name: test_n16_snippet_manager
      - name: test_n14_snippet_manager
      - name: test_n16_types
      - name: test_n14_types
      - name: test_vscode
      - name: test_connectivity
      - name: test_apistrict
  - name: linux_coverage
    display_name: "Coverage Check"
    run_on: ubuntu1804-small
    tasks:
      - name: check_coverage
  - name: linux_package
    display_name: "Ubuntu 18.04 x64 (Packaging)"
    run_on: ubuntu1804-small
    tasks:
      - name: package_and_upload_artifact_linux_x64
      - name: package_and_upload_artifact_debian_x64
      - name: package_and_upload_artifact_rhel7_x64
      - name: package_and_upload_artifact_rhel8_x64
      - name: package_and_upload_artifact_suse_x64
      - name: package_and_upload_artifact_amzn1_x64
      - name: package_and_upload_artifact_linux_s390x
      - name: package_and_upload_artifact_rhel7_s390x
      - name: package_and_upload_artifact_linux_arm64
      - name: package_and_upload_artifact_debian_arm64
      - name: package_and_upload_artifact_rhel8_arm64
      - name: package_and_upload_artifact_amzn2_arm64
      - name: package_and_upload_artifact_linux_ppc64le
      - name: package_and_upload_artifact_rhel8_ppc64le
  - name: linux_x64_build
    display_name: "RHEL 7.0 x64 (build)"
    run_on: rhel70-build
    expansions:
      executable_os_id: linux-x64
    tasks:
      - name: compile_artifact
  - name: linux_arm64_build
    display_name: "Amazon 2 arm64 (build)"
    run_on: amazon2-arm64-small
    expansions:
      executable_os_id: linux-arm64
    tasks:
      - name: compile_artifact
  - name: linux_ppc64le_build
    display_name: "RHEL 8.1 PPC (build)"
    run_on: rhel81-power8-small
    expansions:
      executable_os_id: linux-ppc64le
    tasks:
      - name: compile_artifact
  - name: linux_s390x_build
    display_name: "RHEL 7.2 s390x (build)"
    run_on: rhel72-zseries-small
    expansions:
      executable_os_id: linux-s390x
    tasks:
      - name: compile_artifact

  - name: e2e_rhel70_x64
    display_name: "RHEL 7.0 x64 (E2E Tests)"
    run_on: rhel70-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_rhel76_x64
    display_name: "RHEL 7.6 x64 (E2E Tests)"
    run_on: rhel76-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_rhel80_x64
    display_name: "RHEL 8.0 x64 (E2E Tests)"
    run_on: rhel80-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_ubuntu1804_x64
    display_name: "Ubuntu 18.04 x64 (E2E Tests)"
    run_on: ubuntu1804-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_ubuntu2004_x64
    display_name: "Ubuntu 20.04 x64 (E2E Tests)"
    run_on: ubuntu2004-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_debian9_x64
    display_name: "Debian 9 x64 (E2E Tests)"
    run_on: debian92-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_debian10_x64
    display_name: "Debian 10 x64 (E2E Tests)"
    run_on: debian10-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_debian11_x64
    display_name: "Debian 11 x64 (E2E Tests)"
    run_on: debian11-small
    tasks:
      - name: e2e_tests_linux_x64_unstable
  - name: e2e_amazon1_x64
    display_name: "Amazon Linux 1 x64 (E2E Tests)"
    run_on: amazon1-2018-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_amazon2_x64
    display_name: "Amazon Linux 2 x64 (E2E Tests)"
    run_on: amazon2-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_suse12_x64
    display_name: "SLES 12 x64 (E2E Tests)"
    run_on: suse12-sp5-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_suse15_x64
    display_name: "SLES 15 x64 (E2E Tests)"
    run_on: suse15-small
    tasks:
      - name: e2e_tests_linux_x64
  - name: e2e_ubuntu1804_arm64
    display_name: "Ubuntu 18.04 arm64 (E2E Tests)"
    run_on: ubuntu1804-arm64-small
    tasks:
      - name: e2e_tests_linux_arm64
  - name: e2e_ubuntu2004_arm64
    display_name: "Ubuntu 20.04 arm64 (E2E Tests)"
    run_on: ubuntu2004-arm64-small
    tasks:
      - name: e2e_tests_linux_arm64
  - name: e2e_amazon2_arm64
    display_name: "Amazon Linux 2 arm64 (E2E Tests)"
    run_on: amazon2-arm64-small
    tasks:
      - name: e2e_tests_linux_arm64
  - name: e2e_rhel82_arm64
    display_name: "RHEL 8.2 arm64 (E2E Tests)"
    run_on: rhel82-arm64-small
    tasks:
      - name: e2e_tests_linux_arm64
  - name: e2e_rhel81_ppc64le
    display_name: "RHEL 8.1 PPC (E2E Tests)"
    run_on: rhel81-power8-small
    tasks:
      - name: e2e_tests_linux_ppc64le
  - name: e2e_rhel72_s390x
    display_name: "RHEL 7.2 s390x (E2E Tests)"
    run_on: rhel72-zseries-small
    tasks:
      - name: e2e_tests_linux_s390x
# TODO: Re-enable once RHEL 8.0 distros are ready for use
# (see also pkg_smoke_tests_rhel80_s390x)
#  - name: e2e_rhel80_s390x
#    display_name: "RHEL 8.0 s390x (E2E Tests)"
#    run_on: rhel80-zseries-small
#    tasks:
#      - name: e2e_tests_linux_s390x

  - name: win32_unit
    display_name: "Windows VS 2019 (Unit tests)"
    run_on: windows-64-vs2019-small
    expansions:
      executable_os_id: win32
    tasks:
      - name: check
      - name: test_n16_arg_parser
      - name: test_n14_arg_parser
      - name: test_n16_async_rewriter2
      - name: test_n14_async_rewriter2
      - name: test_n16_autocomplete
      - name: test_n14_autocomplete
      - name: test_n16_browser_runtime_core
      - name: test_n14_browser_runtime_core
      - name: test_n16_browser_runtime_electron
      - name: test_n14_browser_runtime_electron
      - name: test_n16_build
      - name: test_n14_build
      - name: test_m40xc_n16_cli_repl
      - name: test_m40xe_n16_cli_repl
      - name: test_m42xc_n16_cli_repl
      - name: test_m42xe_n16_cli_repl
      - name: test_m44xc_n16_cli_repl
      - name: test_m44xe_n16_cli_repl
      - name: test_m50xc_n16_cli_repl
      - name: test_m50xe_n16_cli_repl
      - name: test_mlatest_n16_cli_repl
      - name: test_m40xc_n14_cli_repl
      - name: test_m40xe_n14_cli_repl
      - name: test_m42xc_n14_cli_repl
      - name: test_m42xe_n14_cli_repl
      - name: test_m44xc_n14_cli_repl
      - name: test_m44xe_n14_cli_repl
      - name: test_m50xc_n14_cli_repl
      - name: test_m50xe_n14_cli_repl
      - name: test_mlatest_n14_cli_repl
      - name: test_n16_editor
      - name: test_n14_editor
      - name: test_n16_errors
      - name: test_n14_errors
      - name: test_n16_history
      - name: test_n14_history
      - name: test_n16_i18n
      - name: test_n14_i18n
      - name: test_n16_js_multiline_to_singleline
      - name: test_n14_js_multiline_to_singleline
      - name: test_n16_logging
      - name: test_n14_logging
      - name: test_m40xc_n16_node_runtime_worker_thread
      - name: test_m40xe_n16_node_runtime_worker_thread
      - name: test_m42xc_n16_node_runtime_worker_thread
      - name: test_m42xe_n16_node_runtime_worker_thread
      - name: test_m44xc_n16_node_runtime_worker_thread
      - name: test_m44xe_n16_node_runtime_worker_thread
      - name: test_m50xc_n16_node_runtime_worker_thread
      - name: test_m50xe_n16_node_runtime_worker_thread
      - name: test_mlatest_n16_node_runtime_worker_thread
      - name: test_m40xc_n14_node_runtime_worker_thread
      - name: test_m40xe_n14_node_runtime_worker_thread
      - name: test_m42xc_n14_node_runtime_worker_thread
      - name: test_m42xe_n14_node_runtime_worker_thread
      - name: test_m44xc_n14_node_runtime_worker_thread
      - name: test_m44xe_n14_node_runtime_worker_thread
      - name: test_m50xc_n14_node_runtime_worker_thread
      - name: test_m50xe_n14_node_runtime_worker_thread
      - name: test_mlatest_n14_node_runtime_worker_thread
      - name: test_n16_service_provider_core
      - name: test_n14_service_provider_core
      - name: test_m40xc_n16_service_provider_server
      - name: test_m40xe_n16_service_provider_server
      - name: test_m42xc_n16_service_provider_server
      - name: test_m42xe_n16_service_provider_server
      - name: test_m44xc_n16_service_provider_server
      - name: test_m44xe_n16_service_provider_server
      - name: test_m50xc_n16_service_provider_server
      - name: test_m50xe_n16_service_provider_server
      - name: test_mlatest_n16_service_provider_server
      - name: test_m40xc_n14_service_provider_server
      - name: test_m40xe_n14_service_provider_server
      - name: test_m42xc_n14_service_provider_server
      - name: test_m42xe_n14_service_provider_server
      - name: test_m44xc_n14_service_provider_server
      - name: test_m44xe_n14_service_provider_server
      - name: test_m50xc_n14_service_provider_server
      - name: test_m50xe_n14_service_provider_server
      - name: test_mlatest_n14_service_provider_server
      - name: test_m40xc_n16_shell_api
      - name: test_m40xe_n16_shell_api
      - name: test_m42xc_n16_shell_api
      - name: test_m42xe_n16_shell_api
      - name: test_m44xc_n16_shell_api
      - name: test_m44xe_n16_shell_api
      - name: test_m50xc_n16_shell_api
      - name: test_m50xe_n16_shell_api
      - name: test_mlatest_n16_shell_api
      - name: test_m40xc_n14_shell_api
      - name: test_m40xe_n14_shell_api
      - name: test_m42xc_n14_shell_api
      - name: test_m42xe_n14_shell_api
      - name: test_m44xc_n14_shell_api
      - name: test_m44xe_n14_shell_api
      - name: test_m50xc_n14_shell_api
      - name: test_m50xe_n14_shell_api
      - name: test_mlatest_n14_shell_api
      - name: test_n16_shell_evaluator
      - name: test_n14_shell_evaluator
      - name: test_n16_snippet_manager
      - name: test_n14_snippet_manager
      - name: test_n16_types
      - name: test_n14_types
  - name: win32
    display_name: "Windows VS 2019"
    run_on: windows-64-vs2019-small
    expansions:
      executable_os_id: win32
    tasks:
      - name: e2e_tests_win32
      - name: package_and_upload_artifact_win32_x64
      - name: package_and_upload_artifact_win32msi_x64
  - name: win32_build
    display_name: "Windows VS 2019 (build)"
    run_on: windows-64-vs2019-build
    expansions:
      executable_os_id: win32
    tasks:
      - name: compile_artifact

  - name: pkg_smoke_tests_docker
    display_name: "package smoke tests (Docker)"
    run_on: ubuntu1804-small
    tasks:
      - name: pkg_test_docker_centos7_rpm
      - name: pkg_test_docker_rocky8_rpm
      - name: pkg_test_docker_fedora34_rpm
      - name: pkg_test_docker_suse12_rpm
      - name: pkg_test_docker_suse15_rpm
      - name: pkg_test_docker_amazonlinux1_rpm
      - name: pkg_test_docker_amazonlinux2_rpm
      - name: pkg_test_docker_debian9_deb
      - name: pkg_test_docker_debian10_deb
      - name: pkg_test_docker_debian11_deb
      - name: pkg_test_docker_ubuntu18_04_deb
      - name: pkg_test_docker_ubuntu20_04_deb
  - name: pkg_smoke_tests_win32
    display_name: "package smoke tests (win32)"
    run_on: ubuntu1804-small
    tasks:
      - name: pkg_test_ssh_win32_x64
      - name: pkg_test_ssh_win32msi_x64
  - name: pkg_smoke_tests_macos_1014_x64
    display_name: "package smoke tests (macos 10.14 x64)"
    run_on: macos-1014
    tasks:
      - name: pkg_test_macos_darwin_x64
  - name: pkg_smoke_tests_macos_1100_x64
    display_name: "package smoke tests (macos 11.00 x64)"
    run_on: macos-1100
    tasks:
      - name: pkg_test_macos_darwin_x64
  - name: pkg_smoke_tests_macos_arm64
    display_name: "package smoke tests (macos arm64)"
    run_on: macos-1100-arm64
    tasks:
      - name: pkg_test_macos_darwin_arm64
  - name: pkg_smoke_tests_ubuntu1804_arm64
    display_name: "package smoke tests (Ubuntu 18.04 arm64)"
    run_on: ubuntu1804-arm64-small
    tasks:
      - name: pkg_test_debextract_debian_arm64
  - name: pkg_smoke_tests_ubuntu2004_arm64
    display_name: "package smoke tests (Ubuntu 20.04 arm64)"
    run_on: ubuntu2004-arm64-small
    tasks:
      - name: pkg_test_debextract_debian_arm64
  - name: pkg_smoke_tests_amazon2_arm64
    display_name: "package smoke tests (RHEL 8.2 arm64)"
    run_on: rhel82-arm64-small
    tasks:
      - name: pkg_test_rpmextract_rhel8_arm64
  - name: pkg_smoke_tests_rhel82_arm64
    display_name: "package smoke tests (Amazon Linux 2 arm64)"
    run_on: amazon2-arm64-small
    tasks:
      - name: pkg_test_rpmextract_amzn2_arm64
  - name: pkg_smoke_tests_rhel72_s390x
    display_name: "package smoke tests (RHEL 7.2 s390x)"
    run_on: rhel72-zseries-small
    tasks:
      - name: pkg_test_rpmextract_rhel7_s390x
  #- name: pkg_smoke_tests_rhel80_s390x
  #  display_name: "package smoke tests (RHEL 8.0 s390x)"
  #  run_on: rhel80-zseries-small
  #  tasks:
  #    - name: pkg_test_rpmextract_rhel8_s390x
  - name: pkg_smoke_tests_rhel81_ppc64le
    display_name: "package smoke tests (RHEL 8.1 ppc64le)"
    run_on: rhel81-power8-small
    tasks:
      - name: pkg_test_rpmextract_rhel8_ppc64le

  - name: draft_publish_release
    display_name: "Draft/Publish Release"
    run_on: ubuntu1804-small
    tasks:
      - name: release_draft
      - name: release_publish
