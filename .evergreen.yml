# Variables for common functions.
#
# save_artifact: Saves a file to the S3 bucket.
# archive_mongosh: Puts the executable in a tarball.
variables:
  - &upload_file
    command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      bucket: mciuploads
      permissions: public-read
      content_type: application/octet-stream
  - &upload_download_center
    command: s3.put
    params:
      aws_key: ${download_center_aws_key}
      aws_secret: ${download_center_aws_secret}
      bucket: info-mongodb-com
      permissions: public-read
      content_type: application/octet-stream
  - &compile_and_release
    command: shell.exec
    params:
      working_dir: src
      shell: bash
      script: |
        source .evergreen/.setup_env
        export SEGMENT_API_KEY=${segment_key}
        export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
        npm run release
        ls -la dist/
# Functions are any command that can be run.
#
# Current functions:
#   checkout - Checks out the project from git.
#   install - Installs Node and all dependencies.
#   check - Performs linter and dependency checks.
#   test - Runs all tests.
#   release_macos - Publishes the npm packages and uploads the tarballs.
#   release_linux - Publishes the npm packages and uploads the tarballs.
#   release_win - Publishes the npm packages and uploads the tarballs.
#
# TODO: Durran:
#
# MacOS Notarise:
#
# 1) Store password in Keychain:
#
# xcrun altool --store-password-in-keychain-item "AC_PASSWORD" \
#              -u "AC_USERNAME" \
#              -p <secret_password>
#
# xcrun altool --notarize-app \
#      --primary-bundle-id "com.mongodb-js.mongosh" \
#      --username "AC_USERNAME" \
#      --password "@keychain:AC_PASSWORD" \
#      --asc-provider <ProviderShortname> \
#      --file OvernightTextEditor_11.6.8.zip
functions:
  checkout:
    - command: git.get_project
      params:
        directory: src
  install:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          source .evergreen/.install_node
  check:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          source .evergreen/.setup_env
          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
          npm run check-ci
  test:
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          source .evergreen/.setup_env
          export MONGOSH_STITCH_TEST_APP_ID=${stitch_test_app_id}
          export MONGOSH_STITCH_TEST_SERVICE_NAME=${stitch_test_service_name}
          npm run test-ci
  release_macos:
    - <<: *compile_and_release
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          echo "################# Sign, notarise, and release MacOS artifacts ################"
    - <<: *upload_file
      params:
        local_files_include_filter:
          - src/dist/*.*
        remote_file: ${project}/${revision}/
    - <<: *upload_download_center
      params:
        local_files_include_filter:
          - src/dist/mongosh.json
        remote_file: com-download-center/
  release_linux:
    - <<: *compile_and_release
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          echo "################# Sign and release Linux artifacts ################"
    - <<: *upload_file
      params:
        local_files_include_filter:
          - src/dist/*.*
        remote_file: ${project}/${revision}/
  release_win:
    - <<: *compile_and_release
    - command: shell.exec
      params:
        working_dir: src
        shell: bash
        script: |
          echo "################# Sign and release Windows artifacts ################"
    - <<: *upload_file
      params:
        local_files_include_filter:
          - src/dist/*.zip
        remote_file: ${project}/${revision}/
# Tasks will show up as the individual blocks in the Evergreen UI that can
# pass or fail.
#
# Current tasks:
#   check - Performs linter and dependency checks.
#   test - Runs all tests.
#   release_macos - Publishes the npm packages and uploads the tarballs.
#   release_linux - Publishes the npm packages and uploads the tarballs.
#   release_win - Publishes the npm packages and uploads the tarballs.
tasks:
  - name: check
    commands:
      - func: checkout
      - func: install
      - func: check
  - name: test
    commands:
      - func: checkout
      - func: install
      - func: test
  - name: release_macos
    depends_on:
      - name: check
      - name: test
    commands:
      - func: checkout
      - func: install
      - func: release_macos
  - name: release_linux
    depends_on:
      - name: check
      - name: test
    commands:
      - func: checkout
      - func: install
      - func: release_linux
  - name: release_win
    depends_on:
      - name: check
    commands:
      - func: checkout
      - func: install
      - func: release_win
# Need to run builds for every possible build variant.
# TODO: Durran: BUILD-10374 - Need OSX Catalina Signing Machine
buildvariants:
  - name: macos
    display_name: "MacOS Mohave"
    run_on: macos-1014
    tasks:
      - name: check
      - name: test
      - name: release_macos
  - name: ubuntu
    display_name: "Ubuntu 18.04"
    run_on: ubuntu1804-test
    tasks:
      - name: check
      - name: test
      - name: release_linux
  - name: windows
    display_name: "Windows VS 2019"
    run_on: windows-64-vs2019-test
    tasks:
      - name: check
      - name: release_win
#  - name: ubuntuppc
#    display_name: "Ubuntu 18.04 PPC"
#    run_on: ubuntu1804-power8-test
#    tasks:
#      - name: check
#      - name: test
#      - name: release_linux
#  - name: ubuntuz
#    display_name: "Ubuntu 18.04 Z Series"
#    run_on: ubuntu1804-zseries-test
#    tasks:
#      - name: check
#      - name: test
#      - name: release_linux
#  - name: rhel7
#    display_name: "RHEL 7.6"
#    run_on: rhel76-test
#    tasks:
#      - name: check
#      - name: test
#      - name: release_linux
#  - name: rhelppc
#    display_name: "RHEL 7.1 PPC"
#    run_on: rhel71-power8-test
#    tasks:
#      - name: check
#      - name: test
#      - name: release_linux
#  - name: rhelz
#    display_name: "RHEL 7.2 Z Series"
#    run_on: rhel72-zseries-test
#    tasks:
#      - name: check
#      - name: test
#      - name: release_linux
