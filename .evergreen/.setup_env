set -e
set -x
export BASEDIR="$PWD/.evergreen"
export PATH="$BASEDIR/node-v$NODE_JS_VERSION-win-x64:/opt/python/3.6/bin:/opt/chefdk/gitbin:/cygdrive/c/Program Files/Git/bin:/cygdrive/c/Program Files/Git/mingw32/libexec/git-core:/cygdrive/c/Python39/Scripts:/cygdrive/c/Python39:/cygdrive/c/cmake/bin:/opt/mongodbtoolchain/v3/bin:$PATH"
export IS_MONGOSH_EVERGREEN_CI=1

if [ "$OS" != "Windows_NT" ]; then
  if which realpath; then # No realpath on macOS, but also not needed there
    export HOME="$(realpath "$HOME")" # Needed to de-confuse nvm when /home is a symlink
  fi
  export NVM_DIR="$HOME/.nvm"
  echo "Setting NVM environment home: $NVM_DIR"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
  nvm use $NODE_JS_VERSION

  export CC=gcc
  export CXX=c++

  echo "Using gcc version:"
  gcc --version

  echo "Using g++ version:"
  g++ --version
fi

export EVERGREEN_EXPANSIONS_PATH="$BASEDIR/../../tmp/expansions.yaml"

if [ "$OS" == "Windows_NT" ]; then
  export EVERGREEN_EXPANSIONS_PATH="$(cygpath -w "$EVERGREEN_EXPANSIONS_PATH")"
fi

if uname -p | sed -e 's/s390/matches/' -e 's/ppc/matches/' | grep -q matches; then
  # On s390x and PPC machines in evergreen, there is a Python 3.x installation
  # in /opt/mongodbtoolchain/v3/bin, but it's broken in the sense that its bz2
  # package cannot be loaded, which we need for building Node.js.
  # We therefore do some PATH wiggling here to make sure that the python
  # executable used by the Node.js configure script is python 2.x.
  # This is not a sustainable long-term solution, because Node.js drops Python 2
  # support for build scripts with Node.js 15 and above.
  # TODO: Open a build ticket about this, referencing patch/output from
  # https://spruce.mongodb.com/version/608ad4613e8e8601d5cd3d6f/tasks.
  rm -rf tmp/python-container
  mkdir -p tmp/python-container
  (cd tmp/python-container && ln -s /usr/bin/python python && ln -s python python2.7 && ln -s python python2)
  export PATH="$PWD/tmp/python-container:$PATH"
  export FORCE_PYTHON2=1
fi

echo "Using node version:"
node --version

echo "Using npm version:"
npm --version

echo "Using git version:"
git --version

echo "Using python version:"
python --version
